
Rorelsemodul.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000468  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000006  00800100  00800100  000004dc  2**0
                  ALLOC
  2 .comment      00000030  00000000  00000000  000004dc  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000118  00000000  00000000  0000050c  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000a7c  00000000  00000000  00000624  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000003c0  00000000  00000000  000010a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000779  00000000  00000000  00001460  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000404  00000000  00000000  00001bdc  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000003b1  00000000  00000000  00001fe0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00000d60  00000000  00000000  00002391  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 000000e8  00000000  00000000  000030f1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	53 c0       	rjmp	.+166    	; 0xac <__bad_interrupt>
   6:	00 00       	nop
   8:	51 c0       	rjmp	.+162    	; 0xac <__bad_interrupt>
   a:	00 00       	nop
   c:	4f c0       	rjmp	.+158    	; 0xac <__bad_interrupt>
   e:	00 00       	nop
  10:	4d c0       	rjmp	.+154    	; 0xac <__bad_interrupt>
  12:	00 00       	nop
  14:	4b c0       	rjmp	.+150    	; 0xac <__bad_interrupt>
  16:	00 00       	nop
  18:	49 c0       	rjmp	.+146    	; 0xac <__bad_interrupt>
  1a:	00 00       	nop
  1c:	47 c0       	rjmp	.+142    	; 0xac <__bad_interrupt>
  1e:	00 00       	nop
  20:	45 c0       	rjmp	.+138    	; 0xac <__bad_interrupt>
  22:	00 00       	nop
  24:	9a c0       	rjmp	.+308    	; 0x15a <__vector_9>
  26:	00 00       	nop
  28:	41 c0       	rjmp	.+130    	; 0xac <__bad_interrupt>
  2a:	00 00       	nop
  2c:	3f c0       	rjmp	.+126    	; 0xac <__bad_interrupt>
  2e:	00 00       	nop
  30:	3d c0       	rjmp	.+122    	; 0xac <__bad_interrupt>
  32:	00 00       	nop
  34:	67 c0       	rjmp	.+206    	; 0x104 <__vector_13>
  36:	00 00       	nop
  38:	39 c0       	rjmp	.+114    	; 0xac <__bad_interrupt>
  3a:	00 00       	nop
  3c:	37 c0       	rjmp	.+110    	; 0xac <__bad_interrupt>
  3e:	00 00       	nop
  40:	36 c0       	rjmp	.+108    	; 0xae <__vector_16>
  42:	00 00       	nop
  44:	33 c0       	rjmp	.+102    	; 0xac <__bad_interrupt>
  46:	00 00       	nop
  48:	31 c0       	rjmp	.+98     	; 0xac <__bad_interrupt>
  4a:	00 00       	nop
  4c:	2f c0       	rjmp	.+94     	; 0xac <__bad_interrupt>
  4e:	00 00       	nop
  50:	2d c0       	rjmp	.+90     	; 0xac <__bad_interrupt>
  52:	00 00       	nop
  54:	2b c0       	rjmp	.+86     	; 0xac <__bad_interrupt>
  56:	00 00       	nop
  58:	29 c0       	rjmp	.+82     	; 0xac <__bad_interrupt>
  5a:	00 00       	nop
  5c:	27 c0       	rjmp	.+78     	; 0xac <__bad_interrupt>
  5e:	00 00       	nop
  60:	25 c0       	rjmp	.+74     	; 0xac <__bad_interrupt>
  62:	00 00       	nop
  64:	23 c0       	rjmp	.+70     	; 0xac <__bad_interrupt>
  66:	00 00       	nop
  68:	21 c0       	rjmp	.+66     	; 0xac <__bad_interrupt>
  6a:	00 00       	nop
  6c:	1f c0       	rjmp	.+62     	; 0xac <__bad_interrupt>
  6e:	00 00       	nop
  70:	1d c0       	rjmp	.+58     	; 0xac <__bad_interrupt>
  72:	00 00       	nop
  74:	1b c0       	rjmp	.+54     	; 0xac <__bad_interrupt>
  76:	00 00       	nop
  78:	b1 c0       	rjmp	.+354    	; 0x1dc <__vector_30>
  7a:	00 00       	nop
  7c:	17 c0       	rjmp	.+46     	; 0xac <__bad_interrupt>
  7e:	00 00       	nop
  80:	15 c0       	rjmp	.+42     	; 0xac <__bad_interrupt>
  82:	00 00       	nop
  84:	13 c0       	rjmp	.+38     	; 0xac <__bad_interrupt>
  86:	00 00       	nop
  88:	11 c0       	rjmp	.+34     	; 0xac <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_clear_bss>:
  98:	21 e0       	ldi	r18, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	01 c0       	rjmp	.+2      	; 0xa2 <.do_clear_bss_start>

000000a0 <.do_clear_bss_loop>:
  a0:	1d 92       	st	X+, r1

000000a2 <.do_clear_bss_start>:
  a2:	a6 30       	cpi	r26, 0x06	; 6
  a4:	b2 07       	cpc	r27, r18
  a6:	e1 f7       	brne	.-8      	; 0xa0 <.do_clear_bss_loop>
  a8:	83 d0       	rcall	.+262    	; 0x1b0 <main>
  aa:	dc c1       	rjmp	.+952    	; 0x464 <_exit>

000000ac <__bad_interrupt>:
  ac:	a9 cf       	rjmp	.-174    	; 0x0 <__vectors>

000000ae <__vector_16>:
	TCNT2 = 0;
	TIMSK2 |= _BV(OCIE2A);
}

void timer2_stop() {
	TCCR2B = 0;
  ae:	1f 92       	push	r1
  b0:	0f 92       	push	r0
  b2:	0f b6       	in	r0, 0x3f	; 63
  b4:	0f 92       	push	r0
  b6:	11 24       	eor	r1, r1
  b8:	0b b6       	in	r0, 0x3b	; 59
  ba:	0f 92       	push	r0
  bc:	2f 93       	push	r18
  be:	3f 93       	push	r19
  c0:	4f 93       	push	r20
  c2:	5f 93       	push	r21
  c4:	6f 93       	push	r22
  c6:	7f 93       	push	r23
  c8:	8f 93       	push	r24
  ca:	9f 93       	push	r25
  cc:	af 93       	push	r26
  ce:	bf 93       	push	r27
  d0:	ef 93       	push	r30
  d2:	ff 93       	push	r31
  d4:	e0 91 00 01 	lds	r30, 0x0100
  d8:	f0 91 01 01 	lds	r31, 0x0101
  dc:	09 95       	icall
  de:	ff 91       	pop	r31
  e0:	ef 91       	pop	r30
  e2:	bf 91       	pop	r27
  e4:	af 91       	pop	r26
  e6:	9f 91       	pop	r25
  e8:	8f 91       	pop	r24
  ea:	7f 91       	pop	r23
  ec:	6f 91       	pop	r22
  ee:	5f 91       	pop	r21
  f0:	4f 91       	pop	r20
  f2:	3f 91       	pop	r19
  f4:	2f 91       	pop	r18
  f6:	0f 90       	pop	r0
  f8:	0b be       	out	0x3b, r0	; 59
  fa:	0f 90       	pop	r0
  fc:	0f be       	out	0x3f, r0	; 63
  fe:	0f 90       	pop	r0
 100:	1f 90       	pop	r1
 102:	18 95       	reti

00000104 <__vector_13>:
 104:	1f 92       	push	r1
 106:	0f 92       	push	r0
 108:	0f b6       	in	r0, 0x3f	; 63
 10a:	0f 92       	push	r0
 10c:	11 24       	eor	r1, r1
 10e:	0b b6       	in	r0, 0x3b	; 59
 110:	0f 92       	push	r0
 112:	2f 93       	push	r18
 114:	3f 93       	push	r19
 116:	4f 93       	push	r20
 118:	5f 93       	push	r21
 11a:	6f 93       	push	r22
 11c:	7f 93       	push	r23
 11e:	8f 93       	push	r24
 120:	9f 93       	push	r25
 122:	af 93       	push	r26
 124:	bf 93       	push	r27
 126:	ef 93       	push	r30
 128:	ff 93       	push	r31
 12a:	e0 91 04 01 	lds	r30, 0x0104
 12e:	f0 91 05 01 	lds	r31, 0x0105
 132:	09 95       	icall
 134:	ff 91       	pop	r31
 136:	ef 91       	pop	r30
 138:	bf 91       	pop	r27
 13a:	af 91       	pop	r26
 13c:	9f 91       	pop	r25
 13e:	8f 91       	pop	r24
 140:	7f 91       	pop	r23
 142:	6f 91       	pop	r22
 144:	5f 91       	pop	r21
 146:	4f 91       	pop	r20
 148:	3f 91       	pop	r19
 14a:	2f 91       	pop	r18
 14c:	0f 90       	pop	r0
 14e:	0b be       	out	0x3b, r0	; 59
 150:	0f 90       	pop	r0
 152:	0f be       	out	0x3f, r0	; 63
 154:	0f 90       	pop	r0
 156:	1f 90       	pop	r1
 158:	18 95       	reti

0000015a <__vector_9>:
}

#ifdef ENABLE_TIMER2
ISR(TIMER2_COMPA_vect) {
 15a:	1f 92       	push	r1
 15c:	0f 92       	push	r0
 15e:	0f b6       	in	r0, 0x3f	; 63
 160:	0f 92       	push	r0
 162:	11 24       	eor	r1, r1
 164:	0b b6       	in	r0, 0x3b	; 59
 166:	0f 92       	push	r0
 168:	2f 93       	push	r18
 16a:	3f 93       	push	r19
 16c:	4f 93       	push	r20
 16e:	5f 93       	push	r21
 170:	6f 93       	push	r22
 172:	7f 93       	push	r23
 174:	8f 93       	push	r24
 176:	9f 93       	push	r25
 178:	af 93       	push	r26
 17a:	bf 93       	push	r27
 17c:	ef 93       	push	r30
 17e:	ff 93       	push	r31
	_t2_func();
 180:	e0 91 02 01 	lds	r30, 0x0102
 184:	f0 91 03 01 	lds	r31, 0x0103
 188:	09 95       	icall
}
 18a:	ff 91       	pop	r31
 18c:	ef 91       	pop	r30
 18e:	bf 91       	pop	r27
 190:	af 91       	pop	r26
 192:	9f 91       	pop	r25
 194:	8f 91       	pop	r24
 196:	7f 91       	pop	r23
 198:	6f 91       	pop	r22
 19a:	5f 91       	pop	r21
 19c:	4f 91       	pop	r20
 19e:	3f 91       	pop	r19
 1a0:	2f 91       	pop	r18
 1a2:	0f 90       	pop	r0
 1a4:	0b be       	out	0x3b, r0	; 59
 1a6:	0f 90       	pop	r0
 1a8:	0f be       	out	0x3f, r0	; 63
 1aa:	0f 90       	pop	r0
 1ac:	1f 90       	pop	r1
 1ae:	18 95       	reti

000001b0 <main>:
 1b0:	cf 93       	push	r28
 1b2:	df 93       	push	r29
 1b4:	00 d0       	rcall	.+0      	; 0x1b6 <main+0x6>
 1b6:	00 d0       	rcall	.+0      	; 0x1b8 <main+0x8>
 1b8:	1f 92       	push	r1
 1ba:	cd b7       	in	r28, 0x3d	; 61
 1bc:	de b7       	in	r29, 0x3e	; 62
 1be:	60 e4       	ldi	r22, 0x40	; 64
 1c0:	72 e4       	ldi	r23, 0x42	; 66
 1c2:	8f e0       	ldi	r24, 0x0F	; 15
 1c4:	90 e0       	ldi	r25, 0x00	; 0
 1c6:	15 d0       	rcall	.+42     	; 0x1f2 <suart_init>
 1c8:	78 94       	sei
 1ca:	8f ef       	ldi	r24, 0xFF	; 255
 1cc:	84 b9       	out	0x04, r24	; 4
 1ce:	41 e0       	ldi	r20, 0x01	; 1
 1d0:	61 e1       	ldi	r22, 0x11	; 17
 1d2:	8c e0       	ldi	r24, 0x0C	; 12
 1d4:	00 d1       	rcall	.+512    	; 0x3d6 <suart_command_read_data>
 1d6:	8a 81       	ldd	r24, Y+2	; 0x02
 1d8:	85 b9       	out	0x05, r24	; 5
 1da:	ff cf       	rjmp	.-2      	; 0x1da <main+0x2a>

000001dc <__vector_30>:
 1dc:	1f 92       	push	r1
 1de:	0f 92       	push	r0
 1e0:	0f b6       	in	r0, 0x3f	; 63
 1e2:	0f 92       	push	r0
 1e4:	11 24       	eor	r1, r1
 1e6:	5d 98       	cbi	0x0b, 5	; 11
 1e8:	0f 90       	pop	r0
 1ea:	0f be       	out	0x3f, r0	; 63
 1ec:	0f 90       	pop	r0
 1ee:	1f 90       	pop	r1
 1f0:	18 95       	reti

000001f2 <suart_init>:
 1f2:	9b 01       	movw	r18, r22
 1f4:	ac 01       	movw	r20, r24
 1f6:	80 e2       	ldi	r24, 0x20	; 32
 1f8:	8a b9       	out	0x0a, r24	; 10
 1fa:	da 01       	movw	r26, r20
 1fc:	c9 01       	movw	r24, r18
 1fe:	55 23       	and	r21, r21
 200:	1c f4       	brge	.+6      	; 0x208 <suart_init+0x16>
 202:	01 96       	adiw	r24, 0x01	; 1
 204:	a1 1d       	adc	r26, r1
 206:	b1 1d       	adc	r27, r1
 208:	b5 95       	asr	r27
 20a:	a7 95       	ror	r26
 20c:	97 95       	ror	r25
 20e:	87 95       	ror	r24
 210:	bc 01       	movw	r22, r24
 212:	cd 01       	movw	r24, r26
 214:	60 5c       	subi	r22, 0xC0	; 192
 216:	7d 4b       	sbci	r23, 0xBD	; 189
 218:	80 4f       	sbci	r24, 0xF0	; 240
 21a:	9f 4f       	sbci	r25, 0xFF	; 255
 21c:	01 d1       	rcall	.+514    	; 0x420 <__udivmodsi4>
 21e:	da 01       	movw	r26, r20
 220:	c9 01       	movw	r24, r18
 222:	01 97       	sbiw	r24, 0x01	; 1
 224:	a1 09       	sbc	r26, r1
 226:	b1 09       	sbc	r27, r1
 228:	89 2f       	mov	r24, r25
 22a:	9a 2f       	mov	r25, r26
 22c:	ab 2f       	mov	r26, r27
 22e:	bb 27       	eor	r27, r27
 230:	80 93 cd 00 	sts	0x00CD, r24
 234:	21 50       	subi	r18, 0x01	; 1
 236:	20 93 cc 00 	sts	0x00CC, r18
 23a:	86 e0       	ldi	r24, 0x06	; 6
 23c:	80 93 ca 00 	sts	0x00CA, r24
 240:	e9 ec       	ldi	r30, 0xC9	; 201
 242:	f0 e0       	ldi	r31, 0x00	; 0
 244:	80 81       	ld	r24, Z
 246:	88 65       	ori	r24, 0x58	; 88
 248:	80 83       	st	Z, r24
 24a:	08 95       	ret

0000024c <suart_read_char>:
 24c:	e8 ec       	ldi	r30, 0xC8	; 200
 24e:	f0 e0       	ldi	r31, 0x00	; 0
 250:	80 81       	ld	r24, Z
 252:	88 23       	and	r24, r24
 254:	ec f7       	brge	.-6      	; 0x250 <suart_read_char+0x4>
 256:	e8 ec       	ldi	r30, 0xC8	; 200
 258:	f0 e0       	ldi	r31, 0x00	; 0
 25a:	80 81       	ld	r24, Z
 25c:	85 ff       	sbrs	r24, 5
 25e:	fd cf       	rjmp	.-6      	; 0x25a <suart_read_char+0xe>
 260:	80 91 ce 00 	lds	r24, 0x00CE
 264:	08 95       	ret

00000266 <suart_send_char>:
 266:	5d 9a       	sbi	0x0b, 5	; 11
 268:	e8 ec       	ldi	r30, 0xC8	; 200
 26a:	f0 e0       	ldi	r31, 0x00	; 0
 26c:	90 81       	ld	r25, Z
 26e:	95 ff       	sbrs	r25, 5
 270:	fd cf       	rjmp	.-6      	; 0x26c <suart_send_char+0x6>
 272:	80 93 ce 00 	sts	0x00CE, r24
 276:	08 95       	ret

00000278 <suart_read_string>:
 278:	df 92       	push	r13
 27a:	ef 92       	push	r14
 27c:	ff 92       	push	r15
 27e:	0f 93       	push	r16
 280:	1f 93       	push	r17
 282:	cf 93       	push	r28
 284:	df 93       	push	r29
 286:	8c 01       	movw	r16, r24
 288:	7b 01       	movw	r14, r22
 28a:	81 e0       	ldi	r24, 0x01	; 1
 28c:	e8 1a       	sub	r14, r24
 28e:	f1 08       	sbc	r15, r1
 290:	1e 14       	cp	r1, r14
 292:	1f 04       	cpc	r1, r15
 294:	8c f4       	brge	.+34     	; 0x2b8 <suart_read_string+0x40>
 296:	c0 e0       	ldi	r28, 0x00	; 0
 298:	d0 e0       	ldi	r29, 0x00	; 0
 29a:	d1 2c       	mov	r13, r1
 29c:	d7 df       	rcall	.-82     	; 0x24c <suart_read_char>
 29e:	88 23       	and	r24, r24
 2a0:	71 f0       	breq	.+28     	; 0x2be <suart_read_string+0x46>
 2a2:	f8 01       	movw	r30, r16
 2a4:	ed 0d       	add	r30, r13
 2a6:	f1 1d       	adc	r31, r1
 2a8:	80 83       	st	Z, r24
 2aa:	d3 94       	inc	r13
 2ac:	cd 2d       	mov	r28, r13
 2ae:	d0 e0       	ldi	r29, 0x00	; 0
 2b0:	ce 15       	cp	r28, r14
 2b2:	df 05       	cpc	r29, r15
 2b4:	9c f3       	brlt	.-26     	; 0x29c <suart_read_string+0x24>
 2b6:	03 c0       	rjmp	.+6      	; 0x2be <suart_read_string+0x46>
 2b8:	c0 e0       	ldi	r28, 0x00	; 0
 2ba:	d0 e0       	ldi	r29, 0x00	; 0
 2bc:	d1 2c       	mov	r13, r1
 2be:	f8 01       	movw	r30, r16
 2c0:	ed 0d       	add	r30, r13
 2c2:	f1 1d       	adc	r31, r1
 2c4:	10 82       	st	Z, r1
 2c6:	ce 01       	movw	r24, r28
 2c8:	01 96       	adiw	r24, 0x01	; 1
 2ca:	df 91       	pop	r29
 2cc:	cf 91       	pop	r28
 2ce:	1f 91       	pop	r17
 2d0:	0f 91       	pop	r16
 2d2:	ff 90       	pop	r15
 2d4:	ef 90       	pop	r14
 2d6:	df 90       	pop	r13
 2d8:	08 95       	ret

000002da <suart_send_string>:
 2da:	ff 92       	push	r15
 2dc:	0f 93       	push	r16
 2de:	1f 93       	push	r17
 2e0:	cf 93       	push	r28
 2e2:	df 93       	push	r29
 2e4:	f6 2e       	mov	r15, r22
 2e6:	66 23       	and	r22, r22
 2e8:	79 f0       	breq	.+30     	; 0x308 <suart_send_string+0x2e>
 2ea:	c8 2f       	mov	r28, r24
 2ec:	d9 2f       	mov	r29, r25
 2ee:	10 e0       	ldi	r17, 0x00	; 0
 2f0:	00 e0       	ldi	r16, 0x00	; 0
 2f2:	04 c0       	rjmp	.+8      	; 0x2fc <suart_send_string+0x22>
 2f4:	12 30       	cpi	r17, 0x02	; 2
 2f6:	10 f0       	brcs	.+4      	; 0x2fc <suart_send_string+0x22>
 2f8:	88 81       	ld	r24, Y
 2fa:	08 0f       	add	r16, r24
 2fc:	89 91       	ld	r24, Y+
 2fe:	b3 df       	rcall	.-154    	; 0x266 <suart_send_char>
 300:	1f 5f       	subi	r17, 0xFF	; 255
 302:	1f 11       	cpse	r17, r15
 304:	f7 cf       	rjmp	.-18     	; 0x2f4 <suart_send_string+0x1a>
 306:	01 c0       	rjmp	.+2      	; 0x30a <suart_send_string+0x30>
 308:	00 e0       	ldi	r16, 0x00	; 0
 30a:	80 2f       	mov	r24, r16
 30c:	80 95       	com	r24
 30e:	ab df       	rcall	.-170    	; 0x266 <suart_send_char>
 310:	df 91       	pop	r29
 312:	cf 91       	pop	r28
 314:	1f 91       	pop	r17
 316:	0f 91       	pop	r16
 318:	ff 90       	pop	r15
 31a:	08 95       	ret

0000031c <suart_command>:
 31c:	df 92       	push	r13
 31e:	ef 92       	push	r14
 320:	ff 92       	push	r15
 322:	0f 93       	push	r16
 324:	1f 93       	push	r17
 326:	cf 93       	push	r28
 328:	df 93       	push	r29
 32a:	cd b7       	in	r28, 0x3d	; 61
 32c:	de b7       	in	r29, 0x3e	; 62
 32e:	65 97       	sbiw	r28, 0x15	; 21
 330:	0f b6       	in	r0, 0x3f	; 63
 332:	f8 94       	cli
 334:	de bf       	out	0x3e, r29	; 62
 336:	0f be       	out	0x3f, r0	; 63
 338:	cd bf       	out	0x3d, r28	; 61
 33a:	d8 2e       	mov	r13, r24
 33c:	cb 01       	movw	r24, r22
 33e:	ed b6       	in	r14, 0x3d	; 61
 340:	fe b6       	in	r15, 0x3e	; 62
 342:	64 2f       	mov	r22, r20
 344:	ca df       	rcall	.-108    	; 0x2da <suart_send_string>
 346:	5d 99       	sbic	0x0b, 5	; 11
 348:	fe cf       	rjmp	.-4      	; 0x346 <suart_command+0x2a>
 34a:	60 e1       	ldi	r22, 0x10	; 16
 34c:	70 e0       	ldi	r23, 0x00	; 0
 34e:	ce 01       	movw	r24, r28
 350:	06 96       	adiw	r24, 0x06	; 6
 352:	92 df       	rcall	.-220    	; 0x278 <suart_read_string>
 354:	86 30       	cpi	r24, 0x06	; 6
 356:	10 f0       	brcs	.+4      	; 0x35c <suart_command+0x40>
 358:	89 e9       	ldi	r24, 0x99	; 153
 35a:	85 b9       	out	0x05, r24	; 5
 35c:	3a 85       	ldd	r19, Y+10	; 0x0a
 35e:	49 85       	ldd	r20, Y+9	; 0x09
 360:	42 50       	subi	r20, 0x02	; 2
 362:	64 2f       	mov	r22, r20
 364:	70 e0       	ldi	r23, 0x00	; 0
 366:	8d b7       	in	r24, 0x3d	; 61
 368:	9e b7       	in	r25, 0x3e	; 62
 36a:	86 1b       	sub	r24, r22
 36c:	97 0b       	sbc	r25, r23
 36e:	0f b6       	in	r0, 0x3f	; 63
 370:	f8 94       	cli
 372:	9e bf       	out	0x3e, r25	; 62
 374:	0f be       	out	0x3f, r0	; 63
 376:	8d bf       	out	0x3d, r24	; 61
 378:	0d b7       	in	r16, 0x3d	; 61
 37a:	1e b7       	in	r17, 0x3e	; 62
 37c:	0f 5f       	subi	r16, 0xFF	; 255
 37e:	1f 4f       	sbci	r17, 0xFF	; 255
 380:	16 16       	cp	r1, r22
 382:	17 06       	cpc	r1, r23
 384:	54 f4       	brge	.+20     	; 0x39a <suart_command+0x7e>
 386:	fe 01       	movw	r30, r28
 388:	3b 96       	adiw	r30, 0x0b	; 11
 38a:	d8 01       	movw	r26, r16
 38c:	6e 0f       	add	r22, r30
 38e:	7f 1f       	adc	r23, r31
 390:	91 91       	ld	r25, Z+
 392:	9d 93       	st	X+, r25
 394:	e6 17       	cp	r30, r22
 396:	f7 07       	cpc	r31, r23
 398:	d9 f7       	brne	.-10     	; 0x390 <suart_command+0x74>
 39a:	d9 82       	std	Y+1, r13	; 0x01
 39c:	3a 83       	std	Y+2, r19	; 0x02
 39e:	4b 83       	std	Y+3, r20	; 0x03
 3a0:	1d 83       	std	Y+5, r17	; 0x05
 3a2:	0c 83       	std	Y+4, r16	; 0x04
 3a4:	50 2f       	mov	r21, r16
 3a6:	6d 81       	ldd	r22, Y+5	; 0x05
 3a8:	2d 2d       	mov	r18, r13
 3aa:	70 e0       	ldi	r23, 0x00	; 0
 3ac:	80 e0       	ldi	r24, 0x00	; 0
 3ae:	90 e0       	ldi	r25, 0x00	; 0
 3b0:	0f b6       	in	r0, 0x3f	; 63
 3b2:	f8 94       	cli
 3b4:	fe be       	out	0x3e, r15	; 62
 3b6:	0f be       	out	0x3f, r0	; 63
 3b8:	ed be       	out	0x3d, r14	; 61
 3ba:	65 96       	adiw	r28, 0x15	; 21
 3bc:	0f b6       	in	r0, 0x3f	; 63
 3be:	f8 94       	cli
 3c0:	de bf       	out	0x3e, r29	; 62
 3c2:	0f be       	out	0x3f, r0	; 63
 3c4:	cd bf       	out	0x3d, r28	; 61
 3c6:	df 91       	pop	r29
 3c8:	cf 91       	pop	r28
 3ca:	1f 91       	pop	r17
 3cc:	0f 91       	pop	r16
 3ce:	ff 90       	pop	r15
 3d0:	ef 90       	pop	r14
 3d2:	df 90       	pop	r13
 3d4:	08 95       	ret

000003d6 <suart_command_read_data>:
 3d6:	cf 93       	push	r28
 3d8:	df 93       	push	r29
 3da:	cd b7       	in	r28, 0x3d	; 61
 3dc:	de b7       	in	r29, 0x3e	; 62
 3de:	2c 97       	sbiw	r28, 0x0c	; 12
 3e0:	0f b6       	in	r0, 0x3f	; 63
 3e2:	f8 94       	cli
 3e4:	de bf       	out	0x3e, r29	; 62
 3e6:	0f be       	out	0x3f, r0	; 63
 3e8:	cd bf       	out	0x3d, r28	; 61
 3ea:	9f ef       	ldi	r25, 0xFF	; 255
 3ec:	9e 83       	std	Y+6, r25	; 0x06
 3ee:	9f 83       	std	Y+7, r25	; 0x07
 3f0:	88 87       	std	Y+8, r24	; 0x08
 3f2:	94 e0       	ldi	r25, 0x04	; 4
 3f4:	99 87       	std	Y+9, r25	; 0x09
 3f6:	92 e0       	ldi	r25, 0x02	; 2
 3f8:	9a 87       	std	Y+10, r25	; 0x0a
 3fa:	6b 87       	std	Y+11, r22	; 0x0b
 3fc:	4c 87       	std	Y+12, r20	; 0x0c
 3fe:	47 e0       	ldi	r20, 0x07	; 7
 400:	be 01       	movw	r22, r28
 402:	6a 5f       	subi	r22, 0xFA	; 250
 404:	7f 4f       	sbci	r23, 0xFF	; 255
 406:	8a df       	rcall	.-236    	; 0x31c <suart_command>
 408:	70 e0       	ldi	r23, 0x00	; 0
 40a:	80 e0       	ldi	r24, 0x00	; 0
 40c:	90 e0       	ldi	r25, 0x00	; 0
 40e:	2c 96       	adiw	r28, 0x0c	; 12
 410:	0f b6       	in	r0, 0x3f	; 63
 412:	f8 94       	cli
 414:	de bf       	out	0x3e, r29	; 62
 416:	0f be       	out	0x3f, r0	; 63
 418:	cd bf       	out	0x3d, r28	; 61
 41a:	df 91       	pop	r29
 41c:	cf 91       	pop	r28
 41e:	08 95       	ret

00000420 <__udivmodsi4>:
 420:	a1 e2       	ldi	r26, 0x21	; 33
 422:	1a 2e       	mov	r1, r26
 424:	aa 1b       	sub	r26, r26
 426:	bb 1b       	sub	r27, r27
 428:	fd 01       	movw	r30, r26
 42a:	0d c0       	rjmp	.+26     	; 0x446 <__udivmodsi4_ep>

0000042c <__udivmodsi4_loop>:
 42c:	aa 1f       	adc	r26, r26
 42e:	bb 1f       	adc	r27, r27
 430:	ee 1f       	adc	r30, r30
 432:	ff 1f       	adc	r31, r31
 434:	a2 17       	cp	r26, r18
 436:	b3 07       	cpc	r27, r19
 438:	e4 07       	cpc	r30, r20
 43a:	f5 07       	cpc	r31, r21
 43c:	20 f0       	brcs	.+8      	; 0x446 <__udivmodsi4_ep>
 43e:	a2 1b       	sub	r26, r18
 440:	b3 0b       	sbc	r27, r19
 442:	e4 0b       	sbc	r30, r20
 444:	f5 0b       	sbc	r31, r21

00000446 <__udivmodsi4_ep>:
 446:	66 1f       	adc	r22, r22
 448:	77 1f       	adc	r23, r23
 44a:	88 1f       	adc	r24, r24
 44c:	99 1f       	adc	r25, r25
 44e:	1a 94       	dec	r1
 450:	69 f7       	brne	.-38     	; 0x42c <__udivmodsi4_loop>
 452:	60 95       	com	r22
 454:	70 95       	com	r23
 456:	80 95       	com	r24
 458:	90 95       	com	r25
 45a:	9b 01       	movw	r18, r22
 45c:	ac 01       	movw	r20, r24
 45e:	bd 01       	movw	r22, r26
 460:	cf 01       	movw	r24, r30
 462:	08 95       	ret

00000464 <_exit>:
 464:	f8 94       	cli

00000466 <__stop_program>:
 466:	ff cf       	rjmp	.-2      	; 0x466 <__stop_program>
